import { AxiosInstance } from 'axios';
import { createUrl, Payload } from '@ibabkin/openapi-to-server';

// Components
{{#each components.schemas}}
  export type {{@key}} = {{render_template 'JsonSchema.hbs' this~}};
{{/each}}

// Routes
{{#each paths as |path url|}}
  {{#each (get_methods_obj path)}}
    {{{render_template 'ClientRoute.hbs' this}}}
  {{/each}}
{{/each}}


export class ApiClient {
  constructor(private httpClient: AxiosInstance) {
  }

{{#each paths as |path url|}}
  {{#each (get_methods_obj path)}}
  async {{operationId}}(data: {{payload_name operationId}}): Promise<{{#if (get_value_by_key responses '200')}}{{response_name operationId}}{{else}}void{{/if}}> {
    const response = await this.httpClient.request({
      method: '{{@key}}',
      url: createUrl('{{url}}', data),
    {{#if (get_value_by_key this 'requestBody')}}
      data: data.body,
    {{/if}}
    });
    return response.data;
  }
  {{/each}}
{{/each}}
}
