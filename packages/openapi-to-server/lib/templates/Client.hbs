import { AxiosInstance } from 'axios';
import { addPathParams, Payload, addQueryParams } from '@ibabkin/openapi-to-server';

// Components
{{#each components.schemas}}
  export type {{@key}} = {{render_template 'JsonSchema.hbs' this~}};
{{/each}}

// Routes
{{#each paths as |path url|}}
  {{#each (get_methods_obj path)}}
    {{{render_template 'ClientRoute.hbs' this}}}
  {{/each}}
{{/each}}


export class ApiClient {
  constructor(private httpClient: AxiosInstance) {
  }

{{#each paths as |path url|}}
  {{#each (get_methods_obj path)}}
  async {{operationId}}(data: {{payload_name operationId}}): Promise<{{#if (get_value_by_key responses '200')}}{{response_name operationId}}{{else}}void{{/if}}> {
    const response = await this.httpClient.request({
      method: '{{@key}}',
      url: this.createUrl('{{url}}', data),
      data,
      headers: this.createHeaders(data),
    });
    return response.data;
  }
  {{/each}}

  private createUrl(pattern: string, {params = {}, query = {}}: Partial<Payload>) {
    const url = addPathParams(pattern, params ?? {});
    return addQueryParams(url, query ?? {});
  }

  private createHeaders(headers: Record<string, any>) {
    return headers;
  }
{{/each}}
}
